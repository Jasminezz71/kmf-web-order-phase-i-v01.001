@using ZEN.SaleAndTranfer.UI.Util
@model ZEN.SaleAndTranfer.UI.VM2.Usr.SearchVM2


@{
    ViewBag.Title = "ค้นหา User";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="page-header">
    <h2>@ViewBag.Title <small></small></h2>
</div>

@* Section: เงื่อนไขค้นหา *@
<div class="panel panel-info">
    <div class="panel-heading">เงื่อนไขค้นหา</div>
    <div class="panel-body">
        <form id="formSearch" class="form-horizontal">
            @Html.AntiForgeryToken()
            <input type="hidden" id="Pet_CurrentPageId" name="Pet.CurrentPageId" value='1' />
            <input type="hidden" id="Pet_PageSize" name="Pet.PageSize" value='@PagingHelper.PageSize(PagingHelper.SearchUser)' />
            @Html.HiddenFor(m => m.Pet.OrderByList)
            <div class="form-group">
                <label class="col-md-2 control-label">Username</label>
                <div class="col-md-4">
                    @Html.TextBoxFor(m => m.Pet.Username, new { @class = "form-control", @placeholder = "Username" })
                    @Html.ValidationMessageFor(m => m.Pet.Username, "", new { @class = "text-danger" })
                </div>
                <label class="col-md-2 control-label">Employee ID</label>
                <div class="col-md-4">
                    @Html.TextBoxFor(m => m.Pet.EmployeeID, new { @class = "form-control", @placeholder = "Employee ID" })
                    @Html.ValidationMessageFor(m => m.Pet.EmployeeID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-2 control-label">First Name</label>
                <div class="col-md-4">
                    @Html.TextBoxFor(m => m.Pet.FirstName, new { @class = "form-control", @placeholder = "First Name" })
                    @Html.ValidationMessageFor(m => m.Pet.FirstName, "", new { @class = "text-danger" })
                </div>
                <label class="col-md-2 control-label">Last Name</label>
                <div class="col-md-4">
                    @Html.TextBoxFor(m => m.Pet.LastName, new { @class = "form-control", @placeholder = "Last Name" })
                    @Html.ValidationMessageFor(m => m.Pet.LastName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-2 control-label">Email</label>
                <div class="col-md-4">
                    @Html.TextBoxFor(m => m.Pet.Email, new { @class = "form-control", @placeholder = "Email" })
                    @Html.ValidationMessageFor(m => m.Pet.Email, "", new { @class = "text-danger" })
                </div>
                <label class="col-md-2 control-label">Status</label>
                <div class="col-md-4">
                    <select id="Pet_ActiveFlag" name="Pet.ActiveFlag" class="form-control">
                        <option value="">--All--</option>
                        <option value="True">Active</option>
                        <option value="False">Inactive</option>
                    </select>
                    @Html.ValidationMessageFor(m => m.Pet.ActiveFlag, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-2 control-label">Branch Code</label>
                <div class="col-md-4">
                    @Html.TextBoxFor(m => m.Pet.Branch, new { @class = "form-control", @placeholder = "Code1,Code2,... " })
                    @Html.ValidationMessageFor(m => m.Pet.Branch, "", new { @class = "text-danger" })
                </div>
                <label class="col-md-2 control-label">Role</label>
                <div class="col-md-4">
                    <select id="Pet_Role" name="Pet.Role" class="form-control">
                        <option value="">--All--</option>
                        <option value="Order">Customer</option>
                        <option value="ADMIN">Admin</option>
                        <option value="SALEADMIN">Sale Admin</option>
                    </select>
                    @Html.ValidationMessageFor(m => m.Pet.Role, "", new { @class = "text-danger" })
                </div>
            </div>
            @* Button *@
            <div class="form-group">
                <div class="col-sm-offset-2 col-sm-10">
                    <button type="button" id="btnSearch" class="btn btn-primary" onclick="return btnSearch_onclick('#formSearch',null);">ค้นหา</button>
                    <a href='@Request.Url.LocalPath' id="btnClear" class="btn btn-default" role="button">ล้างหน้าจอ</a>
                </div>
            </div>
        </form>
    </div>
</div>

@* Section: ผลการค้นหา *@
<div id="divSearchResult">

</div>



@section scripts{
    @Scripts.Render("~/bundles/jqueryval")

<script type="text/javascript">
        $(document).ready(function () {
            var username = $('#Pet_Username').val();
            if (username != null && username != '') {
                btnSearch_onclick('#formSearch', null);
            }
        });

        function btnSearch_onclick(formId,pageId) {
            if (!$(formId).valid()) {
                return false;
            }

            //debugger;
            if (pageId != null) {
                $('#Pet_CurrentPageId').val(pageId);
            }

            var dataForm = $(formId).serialize();

            var url1 = '@Url.Action("Search", "Usr", new { Area = "" })';

            $(document.body).css({ 'cursor': 'wait' });

            $.ajax({
                type: "POST",
                url: url1,
                data: dataForm, //data: JSON.stringify(obj),
                //processData: false,
                //contentType: false,
                dataType: "html", //dataType: "json",
                contentType: 'application/x-www-form-urlencoded; charset=UTF-8', //contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    //debugger;
                    $('#divSearchResult').empty();
                    $('#divSearchResult').append(response);

                    $(document.body).css({ 'cursor': 'default' });
                },
                error: function (response) {
                    alert("Error occured!!")
                    alert(response.responseText);

                    $(document.body).css({ 'cursor': 'default' });
                }
            });
        }

        function resetPwd(formId) {
            if (!confirm('ยืนยัน Reset Password?')) {
                return false;
            }
            //debugger;
            var url1 = '@Url.Action("ResetPwd", "Usr", new { Area = "" })';

            var dataForm = $(formId).serialize();

            //$(document.body).css({ 'cursor': 'wait' });

            $.ajax({
                type: "POST",
                url: url1,
                data: dataForm, //data: JSON.stringify(obj),
                //processData: false,
                //contentType: false,
                dataType: "json", //dataType: "html",
                contentType: 'application/x-www-form-urlencoded; charset=UTF-8', //contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    //debugger;
                    if (response.SuccessFlag) {
                        alert('Reset Password เรียบร้อย, Password คือ ' + response.Data);
                    } else {
                        alert(response.Msg);
                    }
                    //$(document.body).css({ 'cursor': 'default' });
                },
                error: function (response) {
                    alert("Error occured!!")
                    alert(response.responseText);

                    //$(document.body).css({ 'cursor': 'default' });
                }
            });
        }
</script>
}
